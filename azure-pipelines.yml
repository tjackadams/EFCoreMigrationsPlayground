# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: 'Playground Pipeline'

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: UseDotNet@2
  displayName: 'install tools'
  inputs:
    packageType: 'sdk'
    version: '5.x'
    includePreviewVersions: true
    
- task: DotNetCoreCLI@2
  displayName: install dotnet-ef
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install --global dotnet-ef --version 5.0.0-rc.1.20451.13'

- task: DotNetCoreCLI@2
  displayName: verify dotnet-ef version
  inputs:
    command: 'custom'
    custom: 'ef'
    arguments: '--version'
    
- task: DotNetCoreCLI@2
  displayName: 'restore'
  inputs:
    command: 'restore'
    projects: '**/**.csproj'
    feedsToUse: 'select'
    verbosityRestore: Normal
- task: DotNetCoreCLI@2
  displayName: 'build'
  inputs:
    command: 'build'
    projects: '**/**.csproj'
    arguments: '--no-restore'
    
- task: DotNetCoreCLI@2
  displayName: 'generate migration scripts'
  inputs:
    command: 'custom'
    custom: 'ef'
    arguments: 'migrations script -p $(build.sourcesdirectory)/src/Playground.Migrations -s $(build.sourcesdirectory)/src/Playground.Web -o $(build.artifactsstagingdirectory)\migrations\migration.sql -i'

- task: PublishBuildArtifacts@1
  displayName: 'publish migration scripts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/migrations'
    ArtifactName: 'migrations'
    publishLocation: 'Container'